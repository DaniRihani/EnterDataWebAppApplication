name: Docker Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  MYSQL_ROOT_PASSWORD: rootpassword
  MYSQL_DATABASE: mydatabase
  MYSQL_USER: appuser
  MYSQL_PASSWORD: apppassword

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      # ðŸ‘‡ Define IMAGE_NAME here (job-level env) with lowercase conversion
      IMAGE_NAME: ${{ lower(github.repository) }}
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17.0.12
      uses: actions/setup-java@v3
      with:
        java-version: '17.0.12'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn clean package -DskipTests

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest  # ðŸ‘ˆ Now uses lowercase name

    - name: Start containers
      run: |
        docker network create app-network
        docker run -d --name mysql-db \
          -e MYSQL_ROOT_PASSWORD=${{ env.MYSQL_ROOT_PASSWORD }} \
          -e MYSQL_DATABASE=${{ env.MYSQL_DATABASE }} \
          -e MYSQL_USER=${{ env.MYSQL_USER }} \
          -e MYSQL_PASSWORD=${{ env.MYSQL_PASSWORD }} \
          --network app-network \
          -p 3306:3306 \
          mysql:8.0

        docker run -d --name webapp-service \
          -p 8080:8080 \
          -e SPRING_DATASOURCE_URL="jdbc:mysql://mysql-db:3306/${{ env.MYSQL_DATABASE }}?useSSL=false" \
          -e SPRING_DATASOURCE_USERNAME=${{ env.MYSQL_USER }} \
          -e SPRING_DATASOURCE_PASSWORD=${{ env.MYSQL_PASSWORD }} \
          --network app-network \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    - name: Verify deployment
      run: |
        sleep 10  # Wait for app to start
        curl --fail http://localhost:8080/health
